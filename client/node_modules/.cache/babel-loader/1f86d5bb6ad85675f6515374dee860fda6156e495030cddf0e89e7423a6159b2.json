{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hashi\\\\Desktop\\\\JK LAW\\\\cloud-cost-analyzer\\\\cloud-cost-analyzer\\\\client\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport API from '../services/api';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend);\nconst Dashboard = () => {\n  _s();\n  const [costData, setCostData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await API.get('/costs');\n        setCostData(res.data);\n      } catch (err) {\n        console.error('Error fetching cost data', err);\n      }\n    };\n    fetchData();\n  }, []);\n  if (!costData) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 25\n  }, this);\n  const chartData = {\n    labels: costData.dailyBreakdown.map(item => item.date),\n    datasets: [{\n      label: 'Daily Cost ($)',\n      data: costData.dailyBreakdown.map(item => item.cost),\n      borderColor: 'rgba(75, 192, 192, 1)',\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      tension: 0.2\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cloud Cost Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Today:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 10\n      }, this), \" $\", costData.summary.totalToday]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"This Month:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 10\n      }, this), \" $\", costData.summary.totalMonthly]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: '600px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Anomalies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: costData.anomalies.map((a, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [a.date, \" \\u2014 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: a.note\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 24\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"0sihno1Q5R91MNjPv43HzYx8H0Y=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","API","Line","Chart","ChartJS","LineElement","CategoryScale","LinearScale","PointElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","Dashboard","_s","costData","setCostData","fetchData","res","get","data","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","chartData","labels","dailyBreakdown","map","item","date","datasets","label","cost","borderColor","backgroundColor","tension","style","padding","summary","totalToday","totalMonthly","maxWidth","anomalies","a","idx","note","_c","$RefreshReg$"],"sources":["C:/Users/hashi/Desktop/JK LAW/cloud-cost-analyzer/cloud-cost-analyzer/client/src/pages/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport API from '../services/api';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  LineElement,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  Tooltip,\n  Legend\n} from 'chart.js';\n\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend);\n\nconst Dashboard = () => {\n  const [costData, setCostData] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await API.get('/costs');\n        setCostData(res.data);\n      } catch (err) {\n        console.error('Error fetching cost data', err);\n      }\n    };\n    fetchData();\n  }, []);\n\n  if (!costData) return <p>Loading...</p>;\n\n  const chartData = {\n    labels: costData.dailyBreakdown.map(item => item.date),\n    datasets: [\n      {\n        label: 'Daily Cost ($)',\n        data: costData.dailyBreakdown.map(item => item.cost),\n        borderColor: 'rgba(75, 192, 192, 1)',\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        tension: 0.2\n      }\n    ]\n  };\n\n  return (\n    <div style={{ padding: '2rem' }}>\n      <h2>Cloud Cost Dashboard</h2>\n      <p><strong>Today:</strong> ${costData.summary.totalToday}</p>\n      <p><strong>This Month:</strong> ${costData.summary.totalMonthly}</p>\n\n      <div style={{ maxWidth: '600px' }}>\n        <Line data={chartData} />\n      </div>\n\n      <h3>Anomalies</h3>\n      <ul>\n        {costData.anomalies.map((a, idx) => (\n          <li key={idx}>\n            {a.date} â€” <strong>{a.note}</strong>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}